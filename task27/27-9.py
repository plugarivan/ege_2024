'''
На вход программе подается последовательность чисел, а также натуральные числа K и D. Особыми называются отрицательные числа, для которых сумма цифр троичной записи равна 12. Рассматриваются все непрерывные подпоследовательности исходной последовательности, в которых количество особых чисел кратно K, а количество всех элементов подпоследовательности кратно D. Программа должна вывести одно число – максимальную сумму такой последовательности.
Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество чисел N (2 ≤ N ≤ 5000000), значение K (K > 0) и значение D (D > 0), разделённые пробелами. Каждая из следующих N строк файлов содержит одно целое число, не превышающее по модулю 10000. Гарантируется, что сумма любой подпоследовательности не превышает 109.
Пример входного файла:
7 2 5
954
-728
5689
-1214
3265
8763
-1315
В этом наборе два особых числа: –728 (–2222223) и –1214 (–11222223). Можно выбрать подпоследовательность (–728, 5689, –1214, 3265, 8763), которая имеет сумму 15775 и содержит 5 элементов, в том числе два особых числа. Подпоследовательность (954, –728, 5689, –1214, 3265, 8763, –1315), которая имеет сумму 16729, не подходит, потому что количество элементов в ней не делится на 5. Ответ: 15775.
В ответе укажите два числа: сначала искомое значение для файла А, затем для файла B.
'''
def osob(x):
    x = -x
    if x <= 0: return False
    sum3 = 0
    while x != 0:
        sum3 += x % 3
        x //= 3
    if sum3 == 12: return True



with open('files/9/27-91b.txt') as f:
    n, k, d = map(int, f.readline().split())
    maxsum = -10 ** 9
    mindlini = [[10 ** 9] * d for i in range(k)] #двумерный список, где k - индексы и остатки от особых чисел кратны K,
    #d - индекс и остатки от всех элементов последовательности кратных d
    summa = count = countosob = 0
    for i in range(n):
        x = int(f.readline())
        summa += x
        count += 1
        ostat = count % d
        if osob(x): countosob += 1
        ostatosob = countosob % k
        if ostatosob == ostat == 0 and summa > maxsum:
            maxsum = summa
        if mindlini[ostatosob][ostat] != 10 ** 9 and summa - mindlini[ostatosob][ostat] > maxsum:
            maxsum = summa - mindlini[ostatosob][ostat]
        mindlini[ostatosob][ostat] = min(mindlini[ostatosob][ostat], summa)
print(maxsum)
