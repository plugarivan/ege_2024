'''
На вход программе подается последовательность целых чисел. Рассматриваются все непрерывные подпоследовательности исходной последовательности, такие что произведение элементов каждой из них не кратно M = 858967. Найдите количество таких подпоследовательностей.
Входные данные. Даны два входных файла (файл A и файл B), содержит в первой строке число N (1 ≤ N ≤ 10 000 000). Каждая из следующих N строк содержит одно натуральное число, не превышающее 10000.
Пример входного файла (для M = 20):
4
3
17
20
1
В этой последовательности есть 4 подпоследовательности, произведение элементов которых не делится на 20: {3}, {3, 17}, {17} и {1}. Ответ — 4.
В ответе укажите два числа: сначала искомое количество подпоследовательностей для файла А, затем для файла B.
'''
with open('files/15/27-101a.txt') as f:
    n = int(f.readline())
    s = [int(i) for i in f]
    count = 0
    for i in range(n):
        proiz = 1
        for j in range(i, n):
            proiz *= s[j]
            if proiz % 858967 != 0:
                count += 1
print(count)
def primfacs(n):
   i = 2
   primfac = []
   while i * i <= n:
       while n % i == 0:
           primfac.append(i)
           n = n // i
       i = i + 1
   if n > 1:
       primfac.append(n)
   return primfac


print(primfacs(858967))

with open('files/15/27-101b.txt') as f:
    n = int(f.readline())
    count = k = 0
    data = [int(i) for i in f]
    dic = {79: 0, 83: 0, 131: 0}
    for i in data:
        k += 1
        for d1, d2 in dic.items():
            if i % d1 == 0: dic[d1] = k
        count += k - min(dic.values())
print(count)
