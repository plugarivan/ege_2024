'''
У медицинской компании есть N пунктов приёма биоматериалов на анализ. Все пункты расположены вдоль автомагистрали и имеют номера, соответствующие расстоянию от нулевой отметки до конкретного пункта. Известно количество пробирок, которое ежедневно принимают в каждом из пунктов. Пробирки перевозят в специальных транспортировочных контейнерах вместимостью не более 36 штук. Каждый транспортировочный контейнер упаковывается в пункте приёма и вскрывается только в лаборатории.
Стоимость перевозки биоматериалов равна произведению расстояния от пункта до лаборатории на количество контейнеров с пробирками. Общая стоимость перевозки за день равна сумме стоимостей перевозок из каждого пункта в лабораторию. Лабораторию расположили в одном из пунктов приёма биоматериалов таким образом, что общая стоимость доставки биоматериалов из всех пунктов минимальна.
Определите минимальную общую стоимость доставки биоматериалов из всех пунктов приёма в лабораторию.
Входные данные
Файл A
Файл B
Дано два входных файла (файл A и файл B), каждый из которых в первой строке содержит число N (1 ≤ N ≤ 10 000 000)  — количество пунктов приёма биоматериалов. В каждой из следующих N строк находится два числа: номер пункта и количество пробирок в этом пункте (все числа натуральные, количество пробирок в каждом пункте не превышает 1000). Пункты перечислены в порядке их расположения вдоль дороги, начиная от нулевой отметки.
В ответе укажите два числа: сначала значение искомой величины для файла А, затем— для файла B.
'''
with open('files/16/27_A.txt') as f:
    n = int(f.readline())
    data = []
    for x in f:
        number, prob = map(int, x.split())#считываем оба числа
        if prob % 36 == 0: data.append([number, prob // 36]) #находим количество необходимых контейнеров
        else: data.append([number, prob // 36 + 1])#если не кратно 36, значит + 1 контейнер, чтобы взять все пробирки и не потерять
    min_s = 10 ** 30
    for i in range(n):
        stoimost = 0
        for j in range(n):
            stoimost += abs(data[i][0] - data[j][0]) * data[j][1]#находим стоимость: расстояние между двумя различными пунктами (0 элемент в вложенном списке) берем в модуле чтобы не было отрицательного расстояния
            #умножаем на количество контейнеров в данном пункте
        min_s = min(stoimost, min_s)
print(min_s)
with open('files/16/27_B.txt') as f:
    n = int(f.readline())
    data = []
    for x in f:
        number, prob = map(int, x.split())#считываем оба числа
        if prob % 36 == 0: data.append([number, prob // 36]) #находим количество необходимых контейнеров
        else: data.append([number, prob // 36 + 1])#если не кратно 36, значит + 1 контейнер, чтобы взять все пробирки и не потерять
    min_s = 10 ** 30
    #список где храним количество контейнеров до нашего пункта
    k_do = n * [0]
    #заполняем первый пункт (количество контейнеров)
    k_do[0] = data[0][1]
    for i in range(1, n):
        #перебираем все пункты и считаем количество контейнеров в каждом, кроме первого - мы его уже учли, последний элемент будет максимальное количество контейнеров для каждого пункта увеличивается
        k_do[i] = k_do[i - 1] + data[i][1]
    stoimosti0 = 0
    for i in range(n):#считаем стоимость для первого пункта
        stoimosti0 += abs(data[i][0] - data[0][0]) * data[i][1]
    for i in range(1, n):#для всех остальных - увеличивая или уменьшая исходную сумму + (расстояние умноженное на количество контейнеров ДО) - (расстояние умноженное на количество контейнеров ПОСЛЕ)
        stoimosti0 = stoimosti0 + (data[i][0] - data[i - 1][0]) * k_do[i - 1] - (data[i][0] - data[i - 1][0]) * (k_do[-1] - k_do[i - 1])#общее количество контейнеров( последний элемент - самый большой) минус сколько до
        min_s = min(min_s, stoimosti0)
print(min_s)
