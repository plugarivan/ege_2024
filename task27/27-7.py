'''
Набор данных представляет собой последовательность натуральных чисел. Необходимо выбрать такую подпоследовательность подряд идущих чисел, чтобы их сумма была максимальной и делилась на 69, и определить её длину. Гарантируется, что такая подпоследовательность существует. Если таких подпоследовательностей несколько, нужно выбрать подпоследовательность наименьшей длины.
Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество чисел N (2 ≤ N ≤ 108). Каждая из следующих N строк содержит натуральное число, не превышающее 10000.
Пример входного файла:
5
12
29
28
41
16
В этом наборе можно выбрать последовательности 12+29+28 (сумма 69) и 28+41 (сумма 69). Наименьшую длину имеет вторая из этих последовательностей. Ответ: 2.
В ответе укажите два числа: сначала искомое значение для файла А, затем для файла B.
'''
with open('files/7/27-71b.txt') as f:
    n = int(f.readline())
    min_sum = 69 * [10 ** 10]
    min_len = 69 * [0]
    summa, maxsum, minlength, ms, ln = 0, 0, 0, 0, 0
    for i in range(n):
        summa += int(f.readline())
        d = summa % 69
        if d == 0:
            maxsum = summa
            minlength = i
        else:
            ms = summa - min_sum[d]
            ln = i - min_len[d]
            if ms > maxsum or (ms == maxsum and ln < minlength):
                maxsum = ms
                minlength = ln
        if summa < min_sum[d]:
            min_sum[d] = summa
            min_len[d] = i
    print(minlength)


