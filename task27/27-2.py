'''
Дана последовательность, которая состоит из троек натуральных чисел. Необходимо распределить все числа на три группы, при этом в каждую группу должно попасть ровно одно число из каждой исходной тройки. Сумма всех чисел в первой группе должна быть нечётной, во второй – чётной. Определите максимально возможную сумму всех чисел в третьей группе.
Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество чисел N (1 ≤ N ≤ 100000). Каждая из следующих N строк содержит три натуральных числа, не превышающих 10000.
Пример входного файла:
3
1 6 9
10 4 16
15 12 7
Для указанных данных искомая сумма равна 37, она соответствует такому распределению чисел по группам: (1, 4, 7), (9, 10, 12), (6, 16, 15).
В ответе укажите два числа: сначала искомое значение для файла А, затем для файла B.
'''
with open('files/2/27-40b.txt') as f:
    n = int(f.readline())
    sumrez, s1, s2, mr = 0, 0, 0, 10001
    for i in range(n):
        a, b, c = map(int, f.readline().split())
        mx = max(a, b, c)
        mn = min(a, b, c)
        sred = (a + b + c) - mx - mn
        sumrez += mx
        s1 += mn
        s2 += sred
        if (mx - sred < mr) and ((mx - sred) % 2 != 0):
            mr = mx - sred
        if (mx - mn < mr) and ((mx - mn) % 2 != 0):
            mr = mx - mn
    if (s1 + s2) % 2 == 0:
        sumrez -= mr
print(sumrez)
